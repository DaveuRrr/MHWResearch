//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: 
//   Authors: Dave uRrr
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: *.sobj & *.sobjl
//  ID Bytes: 
//   History: 
//          -Templated was created
//          -Added support for cSetAnimalArea for the Wedge Beetles
//          -Added cEmGroupSetter
//          -Added cPlJumpPos
//          -Added cFishingFloatSetter
//          -Added cTerrainPoint
//          -Added cTraceLogSetter
//
//      January 31, 2019
//          -Added cOTGroupSetter starting template
//
//      February 02, 2019
//          -Added cAssetBasicSetObject template
//
//      February 14, 2019
//          -Added Parameter Functions to cAssetBasicSetObjects
//          -Updated the cSetAnimalArea for gm_map.sobj
//
//      March 02, 2019
//          -Added cSetPugeeActPoint
//          -Added cSetPugeeReceivePlPoint
//          -Added cSetPugeeRunAwayPoint
//          -Added cSetPugeeSearchItemZone
//
//      March 05, 2019
//          -Updated cVillageNpcSetter
//
//      March 14, 2019
//          -Added cGm012ObjectSetParam
//
//      March 15, 2019
//          -Updated cSetAnimalArea of Configuration and Unkn Struct
//
//      March 16, 2019
//          -Updated cPlJumpPos
//
//      March 21, 2019
//          -Created cEmDesireSetter & cRepopSetter by Material
//
//      March 25, 2019
//          -Updated cTerrinPoint but still needs review
//          -Created cSetFishArea Template
//
//      April 23, 2019
//          -Updated cSetAnimalArea for Rarity
//
//      April 28, 2019
//          -Updated cTraceLogSetter, contains more Data Types.
//
//      April 29, 2019
//          -Updated information of cEmDesireSetter and cRepopSetter
//              to the standard template format.
//
//      April 30, 2019
//          -Merged cEmGroupSetter and cEmSetter because they
//              pretty much are the same template.
//
//      May 3, 2019
//          -Created cOtPosSetter Template
//
//      May 5, 2019
//          -Created cOtRandomSetter Template
//          -Added Compatability to cOtOtasukeSetter
//          -Updated cOtGroupSetter
//
//      Oct 5, 2019
//          -Start the Universal SOBJ to merge all the templates into one
//          -Found the main body struct and split the additional parameter structs for
//              each command.
//
//      Oct 6, 2019
//          -Ported over cAssetBasicSetObject,cEmDesireSetter, cEmGroupSetter, cEmSetter, cEmRepopSetter,
//              cFishingFloatSetter, cPlJumpPos, cTerrainPoint, cTraceLogSetter, cVillageNpcSetter
//
//      Janurary 2020
//          - All previous Reversed Engineered structs were brought over from Vanilla
//          and updated for Iceborne.
//      February 2021
//          - Added Asterisk's input for loading a custom think Table via Hash & path.
//          - Mass update with Ando's DTI MHW Dumps for already mapped files.
//------------------------------------------------

// Header Information
typedef struct {
    long    signature<name="Capcom Garbage">;
    long    fType<name="File Type">;
    if (fType == 6451059) {
        long    Version;
        long    sType;
        long    SOHCnt;
        if (SOHCnt > 0){long    SOH[SOHCnt];}    //Only for Otomos
    }
    uint32  count<bgcolor=0x0000ff>;
} Header;

//------------------------------------------------
//Include cSetObject Templates
//------------------------------------------------
#include "cStructs.bt"
#include "cSetAnimalArea.bt"
#include "cSetFishArea.bt"
#include "cEmSetter.bt"
#include "cVillageNpcSetter.bt"
#include "cPlJumpPos.bt"
#include "cOtXSetter.bt"
#include "cXTraceLogSetter.bt"


//------------------------------------------------
// rSetObject
//------------------------------------------------
typedef struct {
    uint32  mAttr;
    int32   mRefCount;
    Custom  setObject<read=ReadCustom>;
    uint32  NULL;
} rSetObject;

//------------------------------------------------
// VSS File
typedef struct {
    long    stageID;
    long    FFFF0;
    long    rangeMin;
    long    rangeMax;
    string  path;
    long    unknown;
} rVillageSetSOBJ;



//------------------------------------------------
// FT File
typedef struct {
    uint32  mEnumCRC; // CRC32 rSetObject::SettedData
    string  cType<bgcolor=0xFF0000,name="Command Type">;
    long    EOT0<hidden=true>;
    Vector3 Pos<bgcolor=0x00FF00,read=ReadVector3>;
    Vector3 Rot<bgcolor=0x00FF00,read=ReadVector3>;
    Vector3 Scale<bgcolor=0x00FF00,read=ReadVector3>;
    string  Asset<bgcolor=0xff0000>;
    uint32  unkn0;
    uint32  unkn1;
    byte    NULL;

    //Mostly for printing
    local float x;
    local float y;
    local float z;
    
    x = Pos.x;
    y = Pos.x;
    z = Pos.x;
} cFtRoomDockPoint;    


//------------------------------------------------
// SOBJ
typedef struct {
    uint32  mEnumCRC; // CRC32 rSetObject::SettedData
    string  TypeName<bgcolor=0xFF0000>;
    long    EOT0<hidden=true>;
    Vector3 Pos<bgcolor=0x00FF00,read=ReadVector3>;
    Vector3 Rot<bgcolor=0x00FF00,read=ReadVector3>;
    Vector3 Scale<bgcolor=0x00FF00,read=ReadVector3>;
    string  Asset<bgcolor=0xff0000>;
    if (TypeName == "cFtRoomDockPoint") { uint32 unkn[2]; byte NULL; }
    else {
        oStruct unknownStruct;
        string  pointA<bgcolor=0x800080,name="[Object] Pointer A / [Name] Folder">;
        string  pointB<bgcolor=0x800080,name="[Object] Pointer B / [Name] Unknown">;
        string  Nihongo<bgcolor=0x800080,name="Japanese Name?">;
        string  EV<bgcolor=0x800080,name="EV ?">;
        mCoordParam param<bgcolor=0xAAAAAA>;
        Matrix44  m;
        byte    gm<name="[Object] GM Extra">;
        if(gm != 0){GM  gm<name="GM Unknown">;}
    }
    //Mostly for printing
    local string s;
    if (TypeName == "cFtRoomDockPoint") { SPrintf(s, "Unkn0: %d \t Unkn1: %d \t Pos[x: %f \t y: %f \t z: %f",
        unkn[0], unkn[1], Pos.x, Pos.y, Pos.z); }
    else { SPrintf(s, Asset + " " + pointA + " " + pointB + Nihongo + EV + "Pos[x: %f \t y: %f \t z: %f",
        Pos.x, Pos.y, Pos.z);
    }
} SettedData;

//------------------------------------------------
// Empty Struct with String
//------------------------------------------------
typedef struct {
    local string s;
} Empty;

//------------------------------------------------
// SOBJ
//------------------------------------------------
typedef struct {
    SettedData setData<read=ReadSetData>;
    // "cAssetBasicSetObject"
    // "cFishingFloatSetter"
    switch (setData.TypeName) {
        case "cSetAnimalArea"           : cSetAnimalArea    setObjectParam<bgcolor=0x010010,read=ReadSetAnimal>;    break;
        case "cSetFishArea"             : cSetFishArea      setObjectParam<bgcolor=0x010010,read=ReadSetFish>;      break;
        case "cEmSetter"                : cEmSetter         setObjectParam<bgcolor=0x010010,read=ReadEmSetter>;     break;
        case "cEmGroupSetter"           : cEmGroupSetter    setObjectParam<bgcolor=0x010010,read=ReadEmGroup>;      break;
        case "cEmDesireSetter"          : cEmDesireSetter   setObjectParam<bgcolor=0x010010,read=ReadDesireSetter>; break;
        case "cEmRepopSetter"           : cEmRepopSetter    setObjectParam<bgcolor=0x010010,read=ReadRepopSetter>;  break;
        case "cPlJumpPos"               : cPlJumpPos        setObjectParam<bgcolor=0x010010,read=ReadPlJump>;       break;
        case "cVillageNpcSetter"        : cVillageNpcSetter setObjectParam<bgcolor=0x010010,read=ReadNpcSetter>;    break;
        case "cQuestNpcSetter"          : cVillageNpcSetter setObjectParam<bgcolor=0x010010,read=ReadNpcSetter>;    break;
        case "cTerrainPoint"            : cTerrainPoint     setObjectParam<bgcolor=0x010010,read=ReadTerrain>;      break;
        case "cTraceLogSetter"          : cTraceLogSetter   setObjectParam<bgcolor=0x010010,read=ReadTrace>;        break;
        case "cKimenTraceLogSetter"     : cTraceLogSetter   setObjectParam<bgcolor=0x010010,read=ReadTrace>;        break;
        case "cNpcTraceLogSetter"       : cTraceLogSetter   setObjectParam<bgcolor=0x010010,read=ReadTrace>;        break;
        case "cWildCatTraceLogSetter"   : cTraceLogSetter   setObjectParam<bgcolor=0x010010,read=ReadTrace>;        break;
        case "cOtRandomSetter"          : cOtRandomSetter   setObjectParam<bgcolor=0x010010,read=ReadRandom>;       break;
        case "cOtGroupSetter"           : cOtGroupSetter    setObjectParam<bgcolor=0x010010,read=ReadOtGroup>;      break;
        case "cOtOtasukeSetter"         : cOtOtasukeSetter  setObjectParam<bgcolor=0x010010,read=ReadOtasuke>;      break;
        case "cOtPosSetter"             : cOtPosSetter      setObjectParam<bgcolor=0x010010,read=ReadOtPos>;        break;
        default                         : Empty             setObjectParam;                                         break;
    }
} cSetObject;

//------------------------------------------------
//Read Strings
string ReadHead(Header& r) {
    string s;
    SPrintf(s, "Obj: %d", r.count);
    return s;
}

string ReadSOBJL(rSetObject& r) {
    string s;
    SPrintf(s, "Index: %d \t" + r.setObject.s, r.mRefCount);
    return s;
}

string ReadName(cSetObject& r){
    string s = r.setData.TypeName;
    return s;
}

string ReadSetData(SettedData& r) {
    string s = r.s;
    return s;
}

string ReadSOBJ(cSetObject& r) {
    string s = r.setObjectParam.s + " " + r.setData.s;
    return s;
}

string ReadVSS(rVillageSetSOBJ& r) {
    string s;
    SPrintf(s, "Stage: %d \t" + r.path, r.stageID);
    return s;
}
 
string ReadFRDP(cFtRoomDockPoint& r){
    string s;
    SPrintf(s, "u1: %d \t u2: %d \t [X: %f \t Y: %f \t Z: %f]", r.unkn0, r.unkn1, r.x, r.y, r.z);
    return s;
}

//------------------------------------------------
//Display Info
Header header<bgcolor=0x00ffff,read=ReadHead,name="Header">;
switch (header.fType) {
    case 8          : rVillageSetSOBJ   vss[header.count]<read=ReadVSS,optimize=false>;     break;
    case 10         : rSetObject        sobjl[header.count]<read=ReadSOBJL,optimize=false>; break;
    case 6451059    : cSetObject        sobj[header.count]<read=ReadSOBJ,name=ReadName,optimize=false>;   break;
}